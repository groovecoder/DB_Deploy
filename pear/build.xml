<?xml version="1.0"?>
<!--
	This build file packages the dbdeploy files, builds a package.xml (version 2) for installation
	using PEAR and creates the TAR and TGZ files.
-->	
<project name="DB_Deploy" basedir="." default="main">
	
	<property name="dbdeploypkg.home" value=".."/>
	<property name="build.base.dir" value="build"/>
	<property name="pkgname" value="DB_Deploy-${version}"/>		
	<property name="build.src.dir" value="${build.base.dir}/${pkgname}"/>
	
	<!-- some default properties -->
	<property name="notes">This is the latest release of DB_Deploy.</property>
	<property name="state" value="beta"/>
	
	<taskdef
    name="pear-package"
    classname="BuildDbDeployPEARPackageTask" classpath="."/>

	<fileset dir="${dbdeploypkg.home}" id="classes">
		<include name="**"/>
		<exclude name="bin/**"/>
		<exclude name="pear/**"/>
		<exclude name="docs/**"/>
		<exclude name="tutorials/**"/>
		<exclude name="example_proj/**"/>
	</fileset>

	<fileset dir="${dbdeploypkg.home}" id="scripts">
		<include name="bin/pear-*"/>
		<include name="bin/dbdeploy.php"/>
	</fileset>

	<fileset dir="${dbdeploypkg.home}" id="misc">
		<include name="CHANGELOG"/>
		<include name="CREDITS"/>
		<include name="README"/>
		<include name="TODO"/>
		<exclude name="INSTALL*"/>
	</fileset>

	<!--
		==============================================
		Main entry point
		==============================================
	-->				
	<target name="main" if="version" depends="versioncheck,copy-files,create-package-xml,tar"/>

	<!--
	 ===================================================================
	 Target: checks if language was given, otherwise fail
	 ===================================================================
	-->
	<target name="versioncheck" unless="version">
		<echo message="====================================================="/>
		<echo message="Version not specified. You must enter a version. In"/>
		<echo message="the future you can add this to build.properties or"/>
		<echo message="enter it on the command line: "/>
		<echo message=" "/>
		<echo message="-Dversion=2.0.0b1"/>
		<echo message="====================================================="/>	
		<input propertyname="version" promptChar=":">version for package</input>
		
		<property name="pkgname" value="DB_Deploy-${version}" override="true"/>		
		<property name="build.src.dir" value="${build.base.dir}/${pkgname}" override="true"/>
		
	</target>
	
	<!--
		==============================================
		Copy the desired files into the build/ dir
		making sure to put them in the directory
		structure that will be needed for PEAR install
		==============================================
	-->	
	<target name="copy-files">
	
		<echo>-----------------------------</echo>
		<echo>| Creating directory layout |</echo>
		<echo>-----------------------------</echo>
		
		<delete dir="${build.base.dir}"/>
		
		<copy todir="${build.src.dir}">
			<fileset refid="classes"/>
			<fileset refid="scripts"/>
			<fileset refid="misc"/>
		</copy>

		<chmod file="${build.src.dir}/bin/pear-dbdeploy" mode="755"/>
		
	</target>
	
	<!--
		==============================================
		Create a PEAR package.xml which will guide the
		installation.
		==============================================
	-->	
	<target name="create-package-xml" depends="versioncheck" if="version">
	
		<echo>-----------------------------</echo>
		<echo>| Creating PEAR package.xml |</echo>
		<echo>-----------------------------</echo>
		<echo></echo>
		<echo>... (This step may take some time) ...</echo>
		
		<delete	file="${tarfile}"/>
		
		<pear-package dir="${build.src.dir}" destFile="${build.base.dir}/package.xml" version="${version}" state="${state}" notes="${notes}">
			
			<fileset refid="classes"/>
			<fileset refid="misc"/>
			<fileset refid="scripts"/>
			
		</pear-package>
		
	</target>
	
	<!--
		==============================================
		Create a tar.gz of the files, which will be 
		installed by pear package manager.
		==============================================
	-->
	<target name="tar">
		<echo>-----------------------------</echo>
		<echo>| Creating TAR packages     |</echo>
		<echo>-----------------------------</echo>	
		
		<property name="tgzfile" value="${build.base.dir}/${pkgname}.tgz"/>
		<delete	file="${tgzfile}"/>
		<tar compression="gzip" destFile="${tgzfile}" basedir="${build.base.dir}" />
		
		<property name="tarfile" value="${build.base.dir}/${pkgname}.tar"/>
		<delete	file="${tarfile}"/>
		<tar compression="none" destFile="${tarfile}" basedir="${build.base.dir}" />
		
	</target>
	
</project>